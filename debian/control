Source: node-stack-utils
Maintainer: Debian Javascript Maintainers <pkg-javascript-devel@lists.alioth.debian.org>
Uploaders: Abhishek Lolage <abhisheklolage@gmail.com>,
           Bastien Roucari√®s <rouca@debian.org>
Section: javascript
Testsuite: autopkgtest-pkg-nodejs
Priority: optional
Build-Depends:
 debhelper-compat (= 13)
 , node-bluebird <!nocheck>
 , node-q <!nocheck>
 , node-tap <!nocheck>
 , node-pify <!nocheck>
 , node-lodash-packages <!nocheck>
 , node-escape-string-regexp <!nocheck>
 , dh-sequence-nodejs
Standards-Version: 4.6.1
Vcs-Browser: https://salsa.debian.org/js-team/node-stack-utils
Vcs-Git: https://salsa.debian.org/js-team/node-stack-utils.git
Homepage: https://github.com/tapjs/stack-utils#readme
Rules-Requires-Root: no

Package: node-stack-utils
Architecture: all
Depends:
 ${misc:Depends}
 , node-escape-string-regexp
Provides: ${nodejs:Provides}
Multi-Arch: foreign
Description: Captures and cleans stack traces
 This modules provides API for working with nodejs stack traces.
 Ones could create new stack traces instance simulating for instance
 deep call of function, or clean existing stack trace. This API
 includes function to call up and down on stack trace.
 .
 In computing, a stack trace (also called stack backtrace or
 stack traceback) is a report of the active stack frames
 at a certain point in time during the execution of a program.
 Programmers commonly use stack tracing during interactive
 and post-mortem debugging. A stack trace allows tracking
 the sequence of nested functions called - up to the point
 where the stack trace is generated.
 In a post-mortem scenario this extends up to the function
 where the failure occurred
 .
 Node.js is an event-based server-side JavaScript engine.
